---
- name: Install MySql package Red Hat
  yum: name=mysql-server state=latest
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install MySqlpython  package Red Hat
  yum: name=MySQL-python state=latest
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install MySql package Ubuntu
  apt: name=mysql-server state=latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install MySql python package Ubuntu
  apt: name=python-pip state=latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install MySql python package Ubuntu
  apt: name=python-dev state=latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install MySql python package Ubuntu
  apt: name=libmysqlclient-dev state=latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install MySql python package Ubuntu
  command: "pip install MySQL-python"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

#- name: Start MySQL Service
#  service: name=mysqld state=started

- name: Create Application Database
  mysql_db: name={{item}} state=present
  with_items:
    - "{{airavata_db}}"
    - "{{appcatalog_db}}"

- name: Create Application DB User
  mysql_user: name={{dbuser}} password={{dbpassword}} priv={{item}}.*:ALL host='%' state=present append_privs=yes
  with_items:
    - "{{airavata_db}}"
    - "{{appcatalog_db}}"

#- name: Set up DB firewall rule
#  lineinfile: dest={{iptable_rule_file}} state=present
#              regexp="^-A INPUT -s {{hostvars[item]['ansible_default_ipv4']['address']}} -p tcp -m state --state NEW -m tcp --dport {{mysql_port}} -j ACCEPT$"
#              line="-A INPUT -s {{hostvars[item]['ansible_default_ipv4']['address']}} -p tcp -m state --state NEW -m tcp --dport {{mysql_port}} -j ACCEPT"
#              insertbefore="^-A INPUT -j REJECT .*$"
#  with_items:
#    - "{{groups['airavata']}}"
#  notify: restart iptables
